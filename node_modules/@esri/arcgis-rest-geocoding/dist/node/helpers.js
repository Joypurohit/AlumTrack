"use strict";
/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
// https always
exports.ARCGIS_ONLINE_GEOCODING_URL = "https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/";
/**
 * Used to fetch metadata from a geocoding service.
 *
 * ```js
 * import { getGeocoderServiceInfo } from '@esri/arcgis-rest-geocoding';
 *
 * getGeocoderServiceInfo()
 *   .then((response) => {
 *     response.serviceDescription; // => 'World Geocoder'
 *   });
 * ```
 *
 * @param requestOptions - Request options can contain a custom geocoding service to fetch metadata from.
 * @returns A Promise that will resolve with the data from the response.
 */
function getGeocodeService(requestOptions) {
    var url = (requestOptions && requestOptions.endpoint) || exports.ARCGIS_ONLINE_GEOCODING_URL;
    var options = tslib_1.__assign({ httpMethod: "GET", maxUrlLength: 2000 }, requestOptions);
    return arcgis_rest_request_1.request(url, options);
}
exports.getGeocodeService = getGeocodeService;
//# sourceMappingURL=helpers.js.map